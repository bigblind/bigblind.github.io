class BlockFactory {
    static makeRotations(block){
        let rotations = [block];
        let previous = block;
        for (let i = 0; i < 3; i++){
            let r = BlockFactory.rotateRight(previous);
            rotations.push(r);
            previous = r;
        }
        return rotations;
    }

    static rotateRight(block){
        let rotated = [];
        for(let c = 0; c < block[0].length; c++){
            let row = [];
            for(let r=0; r < block.length; r++){
                row.unshift(block[r][c]);
            }
            rotated.push(row);
        }
        return rotated;
    }

    static getKickOffsets(){
        return [
            [
                [[0, 0], [-1, 0], [2, 0], [-1, 0], [2, 0]],
                [[-1, 0], [0, 0], [0, 0], [0, -1], [0, 2]],
                [[-1, -1], [1, -1], [-2, -1], [1, 0], [-2, 0]],
                [[0, -1], [0, -1], [0, -1], [0, 1], [0, -2]]
            ],
            [
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
            ],
            [
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
            ],
            [
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
            ],
            [
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
            ],
            [
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
            ],
            [
                [[0, 0]],
                [[0, 1]],
                [[-1, 1]],
                [[-1, 0]],
            ],
            [
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],
                [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
                [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
            ]
        ];
    }
    
    static getPreviews(){
        return [
            [
                [1, 1, 1, 1]
            ],
            [
                [0, 2, 0],
                [2, 2, 2]
            ],
            [
                [3, 3, 0],
                [0, 3, 3]
            ],
            [
                [0, 4, 4],
                [4, 4, 0]
            ],
            [
                [5, 0, 0],
                [5, 5, 5]
            ],
            [
                [0, 0, 6],
                [6, 6, 6]
            ],
            [
                [7, 7],
                [7, 7]
            ]
        ];
    }
    
    static getBlocks(){
        let blocks = [
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 2, 0],
                [2, 2, 2],
                [0, 0, 0]
            ],
            [
                [3, 3, 0],
                [0, 3, 3],
                [0, 0, 0]
            ],
            [
                [0, 4, 4],
                [4, 4, 0],
                [0, 0, 0]
            ],
            [
                [5, 0, 0],
                [5, 5, 5],
                [0, 0, 0]
            ],
            [
                [0, 0, 6],
                [6, 6, 6],
                [0, 0, 0]
            ],
            [
                [0, 7, 7],
                [0, 7, 7],
                [0, 0, 0]
            ]
        ];
        return blocks.map(BlockFactory.makeRotations);
    }
    
    static getRightRotatedBlock(block){
        return BlockFactory.rotateRight(block);
    }
    
    static getLeftRotatedBlock(block){
        for (let i=0; i<3; i++){
            block = BlockFactory.rotateRight(block);
        }
        return block;
    }
}

export default BlockFactory